---
title: Sample19
layout: false
---

<html>
<head>
  <title>AR.js with default pattern with 512x512</title>
  <link rel="shortcut icon" href="about:blank">
  <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
  <script src="https://rangeslider.js.org/assets/rangeslider.js/dist/rangeslider.min.js"></script>
  <script src="https://aframe.io/releases/0.8.2/aframe.min.js"></script>
  <script src="https://jeromeetienne.github.io/AR.js/aframe/build/aframe-ar.js"></script>
  <script src="https://cdn.rawgit.com/donmccurdy/aframe-extras/v4.1.2/dist/aframe-extras.min.js"></script>
  <link rel="stylesheet" type="text/css" href="https://rangeslider.js.org/assets/rangeslider.js/dist/rangeslider.css">
  <style type="text/css">
    .rangeslider__fill {
      background: #e6e6e6;
    }

    #right {
      position: fixed;
      z-index: 100;
      border-left: #222;
      top: 0;
      right: 0;
      background-color: rgba(145, 254, 77, 0.11);
      width: 20px;
      height: 100%;
      padding: 20px;
    }

    #right .rangeslider--vertical {
      height: 92% !important;
    }

    #buttom {
      position: fixed;
      z-index: 100;
      border-left: #222;
      left: 0;
      bottom: 0;
      background-color: rgba(145, 254, 77, 0.11);
      width: 98%;
      height: 20px;
      padding: 20px;
    }

    #buttom .rangeslider--horizontal {
      width: 98% !important;
    }

    #objects {
      position: fixed;
      padding: 10px;
      width: 100px;
      top: 0;
      left: 0;
      background: rgba(255, 255, 255, 0.3);
    }

    #objects ul {
      list-style: none outside none;
      padding: 0;
      margin: 0;
    }

    #objects ul li {
      padding: 0.5em;
    }

    #objects ul li a {
      cursor: default;
    }

    #objects ul li hr {
      margin: 0;
    }

    #objects ul li.divider {
      padding: 0;
    }

  </style>

  <script type="text/javascript">
    try {
      AFRAME.registerComponent('autoscale', {
        init: function () {
          var el = this.el;
          el.addEventListener('model-loaded', function (e) {
            box3 = new THREE.Box3().setFromObject(e.detail.model);
            delta = 1 / (box3.max.x - box3.min.x);
            scale = 1;
            /*if (delta >= 1 && delta <= 2) {
              scale = THREE.Math.clamp(delta, 3, 4)
            } else if (delta < 0.09) {
              scale = THREE.Math.clamp(delta, 0.3, 1);
            } else if (delta < 1) {
              scale = THREE.Math.clamp(delta, 4, 5);
            } else {
              scale = delta;
            }*/
            console.log('*** delta, scale -- ', delta, scale);
            el.object3D.scale.set(scale, scale, scale);
          });
        }
      });
    } catch (error) {
      //alert(error.message);
    }
  </script>
</head>

<body style='margin : 0px; overflow: hidden;'>

<a-scene embedded arjs="debugUIEnabled: false;" vr-mode-ui="enabled: false">
  <a-marker preset='hiro' type='pattern'>
    <a-entity id="objectEntity" animation-mixer autoscale rotation="0 -90 0"></a-entity>
  </a-marker>
  <a-entity camera></a-entity>
</a-scene>

<div id="objects">
  <ul>
    <li><a id="sample01">Sample 01</a></li>
    <li><a id="sample02">Sample 02</a></li>
    <li class="divider">
      <hr/>
    </li>
    <li><a id="clear-object">Clear</a></li>
  </ul>
</div>
<div id="buttom">
  <input id="buttomSlider" type="range" min="-100" max="100" step="1" value="0" data-orientation="horizontal"/>
</div>
<div id="right">
  <input id="rightSlider" type="range" min="-100" max="100" step="5" value="0" data-orientation="vertical"/>
</div>

<script type="text/javascript">
  try {
    objectEntity = document.getElementById('objectEntity');

    data = {
      'orange': 'https://cdn.rawgit.com/KhronosGroup/glTF-Sample-Models/master/2.0/Duck/glTF/Duck.gltf',
      'blue': 'https://cdn.rawgit.com/KhronosGroup/glTF-Sample-Models/master/2.0/BoxAnimated/glTF/BoxAnimated.gltf',
      'green': 'https://cdn.rawgit.com/KhronosGroup/glTF-Sample-Models/master/2.0/CesiumMan/glTF/CesiumMan.gltf',
      'pink': 'https://cdn.rawgit.com/KhronosGroup/glTF-Sample-Models/master/2.0/RiggedSimple/glTF/RiggedSimple.gltf',
      'yellow': 'https://cdn.rawgit.com/KhronosGroup/glTF-Sample-Models/master/2.0/Monster/glTF/Monster.gltf',
      'red': 'https://cdn.rawgit.com/KhronosGroup/glTF-Sample-Models/master/2.0/BrainStem/glTF/BrainStem.gltf'
    };

    $('#clear-object').click(function () {
      objectEntity.removeAttribute('gltf-model');
      resetSliders();
    });

    function resetSliders() {
      $('#rightSlider').val(0).change();
      $('#buttomSlider').val(0).change();
    }

    // Default gltf model
    objectEntity.setAttribute('gltf-model', 'url(https://cdn.rawgit.com/KhronosGroup/glTF-Sample-Models/master/2.0/CesiumMan/glTF/CesiumMan.gltf)');

    $('#sample01').click(function () {
      resetSliders();
      objectEntity.setAttribute('gltf-model', 'url(https://cdn.rawgit.com/KhronosGroup/glTF-Sample-Models/master/2.0/CesiumMan/glTF/CesiumMan.gltf)');
    });

    $('#sample02').click(function () {
      resetSliders();
      objectEntity.setAttribute('gltf-model', 'url(https://cdn.rawgit.com/KhronosGroup/glTF-Sample-Models/master/2.0/BoxAnimated/glTF/BoxAnimated.gltf)');
    });

    $(function () {
      $('#rightSlider').rangeslider({
        polyfill: false,
        onSlide: function (position, value) {
          var scale = 1;
          if (value == 0) {
            scale = 1;
          } else if (value >= 1) {
            scale = 1 + ((1 * value)/100);
          } else if (value <= 1) {
            scale = 1 - ((-0.75 * value)/100);
          }
          //console.log(value, scale);
          scale = THREE.Math.clamp(scale, 0.25, 3);
          objectEntity.object3D.scale.set(scale, scale, scale);
        }
      });

      $('#buttomSlider').rangeslider({
        polyfill: false,
        onSlide: function (position, value) {
          var angle = -90;
          if (value == 0) {
            angle = -90;
          } else if (value >= 1) {
            angle = objectEntity.object3D.rotation.y + ((180 * value)/100);
          } else if (value <= 1) {
            angle = (180 * value)/100;;
          }
          console.log(value, angle);
          objectEntity.setAttribute('rotation', {x: 0, y: angle, z: 0});
        }
      });
    });

  } catch (error) {
    alert(error.message)
  }
</script>

</body>
</html>
